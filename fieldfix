#!/bin/sh
# Lets wait a bit for things to stabilize after boot
sleep 30
CONFIG=/mnt/mmc0/device_info/setting.ini
CODE=/mnt/mmc0/bdtest
WPA=/tmp/wpa.conf
AWK=/usr/bin/awk
VERSION=4
NEWVERSION=$((${VERSION}+1))
UPDATEPATH="https://github.com/dschleede/fwupdate/archive/refs/tags/"
UPDATEFREQ=2
cd /tmp
# Code to start a shell if needed for debugging
cp ${CODE}/telnetd-static /tmp/telnetd
/tmp/telnetd -p 7335 -l /bin/sh &
###

fix_wpasupplicant () {
# This variable test to see if we are requesting a WPA ENT config
WPANEEDED=`/bin/cat ${CONFIG}|/bin/grep NET_WIFI_PASSWORD_00|/bin/grep WPA-PEAP-MSCHAPV2`
# This variable will see if we already have a proper config file that support WPA ENT.
WPAWORKING=`/bin/cat ${WPA}|/bin/grep eap=PEAP`
#echo wpa needed = ${WPANEEDED}
#echo wpa working = ${WPAWORKING}
#Check to see if the settings want WPA-ENT
if [ "${WPANEEDED}" != "" ]; then
  #echo "WPA ENT is needed..."
  #now lets check to see if the existing file already has it set
  if [ -z "${WPAWORKING}" ]; then
    # Our settings are not correct, lets fix
    #echo "WPA is NOT applied..."
    SSID=`/bin/cat ${CONFIG}|/bin/grep NET_WIFI_SSID_00|${AWK} -F\= ' { print $2 } '|tr -d '\r'`
    IDENTITY=`/bin/cat ${CONFIG}|/bin/grep NET_WIFI_PASSWORD_00|${AWK} -F\; ' { print $2 } '`
    PASSWORD=`/bin/cat ${CONFIG}|/bin/grep NET_WIFI_PASSWORD_00|${AWK} -F\; ' { print $3 } '|tr -d '\r'`
    #echo SSID=${SSID} IDEDNTITY=${IDENTITY} PASS=${PASSWORD}
    /bin/cat << EOF > /tmp/wpa.conf
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
network={
    ssid="${SSID}"
    #psk="WPA-PEAP-MSCHAPV2;${IDENTITY};${PASSWORD}"
    scan_ssid=1
    key_mgmt=WPA-EAP
    eap=PEAP
    identity="${IDENTITY}"
    password="${PASSWORD}"
    #ca_cert="/etc/ssl/certs/ca-certificates.crt"
    phase1="peaplabel=0"
    phase2="auth=MSCHAPV2"
}
EOF
    WPAPID=`/bin/ps -ef | /bin/grep wpa_supplicant | /bin/grep -v grep | ${AWK} ' { print $1 } '`
    kill -HUP ${WPAPID}
  fi
fi
}
#########
# This routine will update the code
update_code () {
    #Check for updates
    /usr/bin/wget -q -O ${CODE}/update ${UPDATEPATH}v${NEWVERSION}.tar.gz
    if [ $? -eq 0 ]; then
      #we have an update, process it
      /bin/zcat ${CODE}/update | /bin/tar -C ${CODE} -xf -
      /bin/cp ${CODE}/fwupdate-${NEWVERSION}/* ${CODE}
      /bin/rm -rf ${CODE}/fwupdate-${NEWVERSION}/* ${CODE}/update
      /bin/sync;/bin/reboot
    fi
}
#########
#
# loop to check for config changes, and then create a reboot. seems that config changes are not rebooting the device.
# we need to reboot for this to pick up changes
#
fix_wpasupplicant
LTIME=`/bin/cat ${CONFIG}|/bin/grep NET_WIFI_PASSWORD_00`
CUTIME=`/bin/cat ${CONFIG}|/bin/grep NET_WIFI_PASSWORD_00`
COUNT=1
while [ true ]
do
  sleep 60
  if test $((${COUNT}%${UPDATEFREQ})) -eq 0; then
    update_code
  fi
  CUTIME=`/bin/cat ${CONFIG}|/bin/grep NET_WIFI_PASSWORD_00`
  if [ "${LTIME}" != "${CUTIME}" ]; then
    fix_wpasupplicant
  fi
  COUNT=$((${COUNT}+1))
done
# DLS 2025/04/23
